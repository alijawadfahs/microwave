statechart:
  name: Microwave controller
  description: |
    in:
     input_timer_inc
     input_timer_dec
     input_timer_reset
     input_cooking_start
     timer_tick
     door_opened
     door_closed
     item_placed
     item_removed

    out:
     heating_on
     heating_off
     beep(number:int)
     lamp_switch_on
     lamp_switch_off
  preamble: |
      timer = 0
      item = 0
  root state:
    name: controller
    initial: door closed
    states:
      - name: door closed # # we have no conditions over item signals here , logically item can't be placed while door is closed.
        on entry: 
          send('lamp_switch_off')
        transitions: 
          - event: door_opened
            target: door opened
          - event: input_timer_inc
            guard: timer < 3600
            action: timer += 1
            contract:
                - always: timer < 3601
          - event: input_timer_dec
            guard: timer != 0
            action: timer -=1
            contract:
                - always: timer >= 0
          - event: input_timer_reset
            action: timer = 0 
         

        initial: program mode
        
        states:
 
          - name: program mode
            transitions:
              - event: input_cooking_start
                guard: timer > 0 and item == 1
                target: cooking mode
              - event: door_opened
                target: door opened
                action: send('lamp_switch_on')  
         
          - name: cooking mode
            on entry: |
              send('heating_on')
              send('lamp_switch_on')
            transitions: 
              - guard: timer == 0
                target: program mode
                action: |
                  send('heating_off')
                  send('beep', number=3)
                  send('lamp_switch_off')
              - event: timer_tick
                action: timer -= 1
              - event: door_opened
                target: door opened
                action:
                  send('heating_off')
                  
      - name: door opened
        on entry: 
          send('lamp_switch_on')
        transitions:
          - event: door_closed
            target: door closed
          - event: item_placed
            action: item = 1 
          - event: item_removed
            action: item = 0
